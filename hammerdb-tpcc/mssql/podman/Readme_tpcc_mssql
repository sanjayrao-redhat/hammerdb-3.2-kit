/bin/bash: 

## Download the mssql container image from the Microsoft registry.

podman pull mcr.microsoft.com/mssql/rhel/server:2019-CU1-rhel-8

## Check if the image has been downloaded

podman images

Install the Microsoft tools on the host where you plan to run the pod

curl https://packages.microsoft.com/config/rhel/7/prod.repo > /etc/yum.repos.d/msprod.repo

If you had a previous version of mssql-tools installed, remove any older unixODBC packages.

yum remove unixODBC-utf16 unixODBC-utf16-devel

Install the latest version

yum -y install mssql-tools unixODBC-devel


Add the tools directory to your PATH

echo 'export PATH="$PATH:/opt/mssql-tools/bin"' >> ~/.bash_profile


## Start the pod with the right options. In the example below we are attaching a local file system as storage
## Make sure that the image name is accurate and the mount point speficied has the right permissions. You can also
## map any host port to the container port 1433 where sqlserver runs but you have to change it in the hammerdb tcl files

podman run --name ms1 -e "ACCEPT_EULA=Y" -e "SA_PASSWORD=100yard-" --detach -v /perf1/mssql_data:/var/opt:z -p 1433:1433 -it mcr.microsoft.com/mssql/rhel/server

If you run into ipv6 error "Unable to initialize the TCP/IP listener. A socket operation encountered a dead network",Â ?use the following startup line

podman run --name ms1 -e "ACCEPT_EULA=Y" -e "SA_PASSWORD=100yard-" -e "MSSQL_IP_ADDRESS=0.0.0.0" --detach -v /perf1/mssql_data_podman:/var/opt:z -p 1433:1433 -it mcr.microsoft.com/mssql/rhel/server:latest


This will start the pod with the sqlserver instance in it.

## Important - This example shows just one directory attached to the container. Depending on the size of the system and
## database, please attach more file systems / mount points to distribute the database across them for scaling


###   Install HammerDB tool

mount perf1:/shak /shak

cd /shak/HammerDB/

### Check and install the latest Hammerdb version. There maybe a newer version than the one in the command below
./HammerDB-3.2-Linux-x86-64-Install


Start building the schema

cd /usr/local/HammerDB-3.2/

## Add more temp files to the database. 
## Important -- Make sure that the directories in the script point to the correct directory

./update_temp.sh

cp /shak/HammerDB/tpcc/mssql/* .

EDIT FILES BEFORE STARTING THE BUILD
==x==x==x==x==x==x==x==x==x==x==x==x==x==x==x==x==

Edit the file mssql.conf file to configure the MSSQL traceflags


Edit the file createdb_mssql.sh to put the database files in the proper directories. This is important if you
pass more than one devices into the container. The scripts creates multiple data files for the tpcc database

vi createdb_mssql.sh

All these files are invoked by the build script so they don't have to executed separately.
-------------------------

Script to build the database
./build_mssql_tpcc.sh

## After the build make sure that the mssql.conf file is copied to the mssql directory in the mount point which is mounted into the container 
## so that database starts with the proper traceflags

cp mssql.conf /perf1/mssql_data_podman/mssql/

### Stop the pod and restart it. The example belows shows the option where ipv6 is disabled

podman stop ms1
podman rm ms1

podman run --name ms1 -e "ACCEPT_EULA=Y" -e "SA_PASSWORD=100yard-" -e "MSSQL_IP_ADDRESS=0.0.0.0" --detach -v /perf1/mssql_data_podman:/var/opt:z -p 1433:1433 -it mcr.microsoft.com/mssql/rhel/server:latest

## if you need to start and stop the database between builds and runs, you can create a script with the commands above


###  Script to run the database

